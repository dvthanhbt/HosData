/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ChuyenVien;

import DataDB2.ExcelExporter;
import DataDB2.FillData;
import DataDB2.IntegerRenderer;
import DataDB2.ObjectCenterRenderer;
import java.io.File;
import java.io.FileFilter;
import java.sql.Date;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableCellRenderer;
/**
 *
 * @author bvndc
 */
public class JInternalTKTuyen extends javax.swing.JInternalFrame {

    /**
     * Creates new form JInternalTKTuyen
     */
    private int noiDung;
    private ActionChuyenDi actCD = new ActionChuyenDi();
    
    public JInternalTKTuyen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtTuNgay = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDenNgay = new javax.swing.JFormattedTextField();
        btnRefresh = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        btnExcel = new javax.swing.JButton();
        lblTongSo = new javax.swing.JLabel();

        setBackground(javax.swing.UIManager.getDefaults().getColor("nimbusFocus"));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setFillsViewportHeight(true);
        jTable1.setGridColor(javax.swing.UIManager.getDefaults().getColor("ArrowButton.background"));
        jTable1.setShowVerticalLines(true);
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Từ ngày:");

        jLabel2.setText("Đến ngày:");

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RefreshDocViewHS.png"))); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/GoToParentFolderHS.png"))); // NOI18N
        btnClose.setText("Đóng");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Excel.jpg"))); // NOI18N
        btnExcel.setText("Xuất Excel");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        lblTongSo.setForeground(java.awt.Color.blue);
        lblTongSo.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTongSo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClose)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh)
                    .addComponent(btnClose)
                    .addComponent(btnExcel)
                    .addComponent(lblTongSo))
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void showTitle(){        
        switch (getNoiDung()){
            case 1:
                this.setTitle("Thống kê chuyển lên tuyến trên");
                break;
            case 2:
                this.setTitle("Thống kê chuyển về tuyến dưới");
                break;
            case 3:
                this.setTitle("Thống kê chuyển cùng tuyến");
                break;
        }
    }
    private String []getHeader(){
        String []header = null;
        switch (getNoiDung()){
            case 1:
                header = new String[15];
                header[0] = "STT";
                header[1] = "Họ tên bệnh nhân";
                header[2] = "Tuổi";
                header[3] = "Phái";
                header[4] = "Có BH";
                header[5] = "Không BH";
                header[6] = "Vượt tuyến";
                header[7] = "Đúng tuyến";
                header[8] = "Thiếu TTB";
                header[9] = "Vượt quá CM";
                header[10] = "Nguyện vọng GĐ";
                header[11] = "Không có CK";
                header[12] = "Khoa";
                header[13] = "Thời gian";
                header[14] = "Chẩn đoán";
                break;
            case 2:
                header = new String[13];
                header[0] = "STT";
                header[1] = "Họ tên bệnh nhân";
                header[2] = "Tuổi";
                header[3] = "Phái";
                header[4] = "Có BH";
                header[5] = "Không BH";
                header[6] = "Vượt tuyến";
                header[7] = "Đúng tuyến";
                header[8] = "Bệnh ổn";
                header[9] = "Xin về";
                header[10] = "Khoa";
                header[11] = "Thời gian";
                header[12] = "Chẩn đoán";
                break;
            case 3:
                header = new String[13];
                header[0] = "STT";
                header[1] = "Họ tên bệnh nhân";
                header[2] = "Tuổi";
                header[3] = "Phái";
                header[4] = "Có BH";
                header[5] = "Không BH";
                header[6] = "Vượt tuyến";
                header[7] = "Đúng tuyến";
                header[8] = "Vượt quá CM";
                header[9] = "Nguyện vọng GĐ";
                header[10] = "Khoa";
                header[11] = "Thời gian";
                header[12] = "Chẩn đoán";
                break;
        }
        return header;
    }
    private void formatJTable(){
        TableCellRenderer tcr;
        switch (noiDung){
            case 1:
                tcr = new IntegerRenderer();
                jTable1.getColumnModel().getColumn(0).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(2).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(13).setCellRenderer(tcr);
                tcr = new ObjectCenterRenderer();
                jTable1.getColumnModel().getColumn(4).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(5).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(6).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(7).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(8).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(9).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(10).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(11).setCellRenderer(tcr);
                break;
            case 2:
                tcr = new IntegerRenderer();
                jTable1.getColumnModel().getColumn(0).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(2).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(11).setCellRenderer(tcr);
                tcr = new ObjectCenterRenderer();
                jTable1.getColumnModel().getColumn(4).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(5).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(6).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(7).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(8).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(9).setCellRenderer(tcr);
                break;
            case 3:
                tcr = new IntegerRenderer();
                jTable1.getColumnModel().getColumn(0).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(2).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(11).setCellRenderer(tcr);
                tcr = new ObjectCenterRenderer();
                jTable1.getColumnModel().getColumn(4).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(5).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(6).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(7).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(8).setCellRenderer(tcr);
                jTable1.getColumnModel().getColumn(9).setCellRenderer(tcr);
                break;
        }
    }
    private void loadData(){
        String []header = getHeader();
        try {
            FillData fillData = new FillData();
            ResultSet rs = null;
            switch (getNoiDung()){
                case 1:
                    rs = actCD.getTKTuyenTren(Date.valueOf(LocalDate.parse(txtTuNgay.getText(), DateTimeFormatter.ofPattern("dd/MM/yyyy"))), Date.valueOf(LocalDate.parse(txtDenNgay.getText(), DateTimeFormatter.ofPattern("dd/MM/yyyy"))));
                    break;
                case 2:
                    rs = actCD.getTKTuyenDuoi(Date.valueOf(LocalDate.parse(txtTuNgay.getText(), DateTimeFormatter.ofPattern("dd/MM/yyyy"))), Date.valueOf(LocalDate.parse(txtDenNgay.getText(), DateTimeFormatter.ofPattern("dd/MM/yyyy"))));
                    break;
                case 3:
                    rs = actCD.getTKCungTuyen(Date.valueOf(LocalDate.parse(txtTuNgay.getText(), DateTimeFormatter.ofPattern("dd/MM/yyyy"))), Date.valueOf(LocalDate.parse(txtDenNgay.getText(), DateTimeFormatter.ofPattern("dd/MM/yyyy"))));
                    break;
            }            
            fillData.fillDataJTable(jTable1, header, rs);
            lblTongSo.setText("Tổng số bệnh nhân: " + String.valueOf(jTable1.getRowCount()));
            formatJTable();
        } catch (Exception e){
            e.printStackTrace();
        }
     }
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        try {
            this.setMaximum(true);
            showTitle();
            txtTuNgay.setText("01/01/" + LocalDate.now().getYear());
            txtDenNgay.setText(LocalDate.now().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
            loadData();
        } catch (Exception e) {
            e.printStackTrace();
        }    }//GEN-LAST:event_formInternalFrameOpened

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        loadData();
    }//GEN-LAST:event_btnRefreshActionPerformed
    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        ExcelExporter ex = new ExcelExporter();
        ex.fillData(jTable1);        
    }//GEN-LAST:event_btnExcelActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblTongSo;
    private javax.swing.JFormattedTextField txtDenNgay;
    private javax.swing.JFormattedTextField txtTuNgay;
    // End of variables declaration//GEN-END:variables

    public int getNoiDung() {
        return noiDung;
    }

    public void setNoiDung(int noiDung) {
        this.noiDung = noiDung;
    }
}
